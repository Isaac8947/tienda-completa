# üöÄ Script para subir Odisea Makeup Store a GitHub
# ============================================================

Write-Host "üõçÔ∏è ODISEA MAKEUP STORE - GITHUB DEPLOYMENT" -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Cyan
Write-Host ""

# Verificar si Git est√° instalado
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git encontrado: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Error: Git no est√° instalado o no est√° en el PATH" -ForegroundColor Red
    Write-Host "Por favor instala Git desde: https://git-scm.com/download/win" -ForegroundColor Yellow
    exit 1
}

# Verificar si estamos en el directorio correcto
if (!(Test-Path "index.php") -or !(Test-Path "config") -or !(Test-Path "models")) {
    Write-Host "‚ùå Error: No est√°s en el directorio del proyecto Odisea Makeup Store" -ForegroundColor Red
    Write-Host "Navega al directorio del proyecto antes de ejecutar este script" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Directorio del proyecto verificado" -ForegroundColor Green

# Solicitar informaci√≥n del repositorio
Write-Host ""
Write-Host "üìù CONFIGURACI√ìN DEL REPOSITORIO" -ForegroundColor Yellow
Write-Host "================================" -ForegroundColor Yellow

$repoName = Read-Host "Nombre del repositorio (ej: odisea-makeup-store)"
if ([string]::IsNullOrWhiteSpace($repoName)) {
    $repoName = "odisea-makeup-store"
    Write-Host "Usando nombre por defecto: $repoName" -ForegroundColor Gray
}

$githubUsername = Read-Host "Tu username de GitHub"
if ([string]::IsNullOrWhiteSpace($githubUsername)) {
    Write-Host "‚ùå Error: El username de GitHub es requerido" -ForegroundColor Red
    exit 1
}

$userEmail = Read-Host "Tu email de GitHub"
if ([string]::IsNullOrWhiteSpace($userEmail)) {
    Write-Host "‚ùå Error: El email es requerido" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üîß CONFIGURANDO GIT..." -ForegroundColor Blue

# Configurar Git globalmente
git config --global user.name "$githubUsername"
git config --global user.email "$userEmail"
git config --global init.defaultBranch main

Write-Host "‚úÖ Configuraci√≥n de Git completada" -ForegroundColor Green

# Verificar si ya es un repositorio Git
if (Test-Path ".git") {
    Write-Host "‚ö†Ô∏è  Este directorio ya es un repositorio Git" -ForegroundColor Yellow
    $reinit = Read-Host "¬øQuieres reinicializar? (s/N)"
    if ($reinit -eq "s" -or $reinit -eq "S") {
        Remove-Item ".git" -Recurse -Force
        Write-Host "üóëÔ∏è  Repositorio Git anterior eliminado" -ForegroundColor Yellow
    } else {
        Write-Host "Usando repositorio Git existente..." -ForegroundColor Gray
    }
}

# Inicializar repositorio Git
if (!(Test-Path ".git")) {
    Write-Host "üöÄ Inicializando repositorio Git..." -ForegroundColor Blue
    git init
    Write-Host "‚úÖ Repositorio Git inicializado" -ForegroundColor Green
}

# Verificar archivos sensibles antes de commit
Write-Host ""
Write-Host "üîç VERIFICANDO ARCHIVOS SENSIBLES..." -ForegroundColor Blue

$sensitiveFiles = @(
    "config/database.php",
    "config/config.php",
    ".env"
)

foreach ($file in $sensitiveFiles) {
    if (Test-Path $file) {
        Write-Host "‚ö†Ô∏è  Archivo sensible encontrado: $file" -ForegroundColor Yellow
        Write-Host "   Aseg√∫rate de que no contenga credenciales reales de producci√≥n" -ForegroundColor Gray
    }
}

# Crear .gitignore si no existe
if (!(Test-Path ".gitignore")) {
    Write-Host "‚ùå .gitignore no encontrado, pero deber√≠a haber sido creado..." -ForegroundColor Red
    Write-Host "Verifica que el archivo .gitignore se haya creado correctamente" -ForegroundColor Yellow
}

# Agregar archivos al staging area
Write-Host ""
Write-Host "üì¶ PREPARANDO ARCHIVOS PARA COMMIT..." -ForegroundColor Blue

git add .
$addResult = $LASTEXITCODE

if ($addResult -eq 0) {
    Write-Host "‚úÖ Archivos agregados al staging area" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error al agregar archivos" -ForegroundColor Red
    exit 1
}

# Mostrar estado del repositorio
Write-Host ""
Write-Host "üìä ESTADO DEL REPOSITORIO:" -ForegroundColor Blue
git status --short

# Hacer commit inicial
Write-Host ""
Write-Host "üíæ CREANDO COMMIT INICIAL..." -ForegroundColor Blue

$commitMessage = "üéâ Initial commit - Odisea Makeup Store E-commerce

‚ú® Features implemented:
‚Ä¢ Responsive design with Tailwind CSS
‚Ä¢ Product catalog with advanced filters
‚Ä¢ Shopping cart with AJAX functionality  
‚Ä¢ User authentication and profiles
‚Ä¢ Mobile-first navigation with hamburger menu
‚Ä¢ Scroll animations and smooth transitions
‚Ä¢ CSRF protection and input validation
‚Ä¢ Real-time search functionality
‚Ä¢ Wishlist and reviews system
‚Ä¢ Special offers and discounts

üöÄ Tech Stack:
‚Ä¢ PHP 8+ with OOP architecture
‚Ä¢ MySQL database with PDO
‚Ä¢ Vanilla JavaScript ES6+
‚Ä¢ Tailwind CSS framework
‚Ä¢ Font Awesome icons
‚Ä¢ AOS animations library

üì± Mobile optimized and PWA ready"

git commit -m "$commitMessage"
$commitResult = $LASTEXITCODE

if ($commitResult -eq 0) {
    Write-Host "‚úÖ Commit inicial creado exitosamente" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error al crear commit inicial" -ForegroundColor Red
    exit 1
}

# Agregar origen remoto
Write-Host ""
Write-Host "üîó CONFIGURANDO REPOSITORIO REMOTO..." -ForegroundColor Blue

$remoteUrl = "https://github.com/$githubUsername/$repoName.git"
git remote add origin $remoteUrl

Write-Host "‚úÖ Origen remoto agregado: $remoteUrl" -ForegroundColor Green

# Informaci√≥n sobre crear el repositorio en GitHub
Write-Host ""
Write-Host "üåê CREAR REPOSITORIO EN GITHUB" -ForegroundColor Yellow
Write-Host "==============================" -ForegroundColor Yellow
Write-Host "ANTES de continuar, necesitas crear el repositorio en GitHub:" -ForegroundColor White
Write-Host ""
Write-Host "1. Ve a: https://github.com/new" -ForegroundColor Cyan
Write-Host "2. Repository name: $repoName" -ForegroundColor Cyan  
Write-Host "3. Description: E-commerce moderno desarrollado en PHP con Tailwind CSS" -ForegroundColor Cyan
Write-Host "4. ‚úÖ Public (recomendado para portafolio)" -ForegroundColor Cyan
Write-Host "5. ‚ùå NO inicializar con README, .gitignore ni license" -ForegroundColor Cyan
Write-Host "6. Click 'Create repository'" -ForegroundColor Cyan
Write-Host ""

$continuar = Read-Host "¬øYa creaste el repositorio en GitHub? (s/N)"

if ($continuar -ne "s" -and $continuar -ne "S") {
    Write-Host ""
    Write-Host "üìã RESUMEN DE COMANDOS PARA CONTINUAR MANUALMENTE:" -ForegroundColor Yellow
    Write-Host "=================================================" -ForegroundColor Yellow
    Write-Host "git branch -M main" -ForegroundColor White
    Write-Host "git push -u origin main" -ForegroundColor White
    Write-Host ""
    Write-Host "Ejecuta estos comandos despu√©s de crear el repositorio en GitHub" -ForegroundColor Gray
    exit 0
}

# Renombrar branch a main y push
Write-Host ""
Write-Host "üöÄ SUBIENDO A GITHUB..." -ForegroundColor Blue

git branch -M main

Write-Host "Realizando push inicial..." -ForegroundColor Gray
git push -u origin main
$pushResult = $LASTEXITCODE

if ($pushResult -eq 0) {
    Write-Host ""
    Write-Host "üéâ ¬°√âXITO! PROYECTO SUBIDO A GITHUB" -ForegroundColor Green
    Write-Host "===================================" -ForegroundColor Green
    Write-Host ""
    Write-Host "üîó Tu repositorio est√° disponible en:" -ForegroundColor Cyan
    Write-Host "   $remoteUrl" -ForegroundColor White
    Write-Host ""
    Write-Host "üìã Pr√≥ximos pasos recomendados:" -ForegroundColor Yellow
    Write-Host "   1. Configura GitHub Pages si quieres demo online" -ForegroundColor Gray
    Write-Host "   2. Agrega topics/tags al repositorio para mejor visibilidad" -ForegroundColor Gray
    Write-Host "   3. Considera configurar GitHub Actions para CI/CD" -ForegroundColor Gray
    Write-Host "   4. A√±ade issues templates y contributing guidelines" -ForegroundColor Gray
    Write-Host ""
    Write-Host "‚ú® ¬°Tu portafolio de e-commerce est√° listo para mostrar al mundo!" -ForegroundColor Magenta
} else {
    Write-Host ""
    Write-Host "‚ùå ERROR AL SUBIR A GITHUB" -ForegroundColor Red
    Write-Host "=========================" -ForegroundColor Red
    Write-Host ""
    Write-Host "Posibles causas:" -ForegroundColor Yellow
    Write-Host "1. El repositorio no existe en GitHub" -ForegroundColor Gray
    Write-Host "2. No tienes permisos para el repositorio" -ForegroundColor Gray
    Write-Host "3. Necesitas autenticaci√≥n (token personal)" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üí° Soluci√≥n manual:" -ForegroundColor Cyan
    Write-Host "   git push -u origin main" -ForegroundColor White
    Write-Host ""
    Write-Host "Si necesitas token de acceso:" -ForegroundColor Yellow
    Write-Host "   https://github.com/settings/tokens" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "Presiona cualquier tecla para salir..." -ForegroundColor Gray
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")